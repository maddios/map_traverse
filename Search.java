import java.util.Vector;
import java.lang.Math;
import java.util.Random;

public class Search {
    public static void main(String[] args) {
       char [][] map = {{'.','.','.','.','#','.','.','#','.','.','.','.','.','.','.','#','.','.','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','.','.','.','#','.','#','.','#','.','.'},
						{'.','.','.','s','.','.','.','#','.','.','.','.','.','#','.','#','.','#','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','.','.','.','#','.','#','.','#','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','.','.','.','#','.','.','.','#','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','#','#','#','#','#','#','#','#','#','.'},
						{'.','.','.','.','.','.','.','#','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','.','.','.','.','.','.','#','.','.','#','.','#','.','.','.','.','.','.','.'},
						{'.','#','#','.','.','.','.','.','.','.','#','.','#','.','.','.','.','.','.','.'},
						{'.','#','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','#','.','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','#','.','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','#','.','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','.','.','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','.','.','#','.','.','#','.','.','.','#','.','.','.','.','.','#','#','.','.'},
						{'.','.','.','#','.','#','.','.','.','.','#','.','.','.','.','.','.','.','.','.'},
						{'.','.','.','#','.','.','.','.','.','#','#','.','.','.','.','.','#','g','.','.'},
						{'.','.','.','#','.','.','#','.','.','.','#','.','.','.','.','.','#','.','.','.'},
						{'.','.','.','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.'}};
    	char [][]map1 = (char [][])map.clone();
        //A* search algorithm
        Asearch search1 = new Asearch(map1);
        search1.driver();
        
        //BFS search algorithm
        
        BFSSearch bsearch = new BFSSearch(map);
        bsearch.driver();    
        
        //Bidirectional search
        BiDiSearch bidi = new BiDiSearch(map);
        bidi.driver();          
    }
}
